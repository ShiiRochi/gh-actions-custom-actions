name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get and cache dependencies
        id: get_and_cache
        uses: ./.github/actions/cached-deps
        with:
          caching: 'false' # disables caching for `lint` job
      - name: Output information
        run: echo "Cache used? ${{ steps.get_and_cache.outputs.used-cache }}"

#      - name: Cache dependencies
#        id: cache
#        uses: actions/cache@v3
#        with:
#          path: node_modules
#          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
#      - name: Install dependencies
#        if: steps.cache.outputs.cache-hit != 'true'
#        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        uses: ./.github/actions/deploy-s3-javascript
        id: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: github-actions-deploy-to-s3-exampke
          dist-folder: ./dist
      - name: Output information
        run: |
          echo "Live URL: ${{ steps.deploy.outputs.website-url }}"
